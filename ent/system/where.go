// Code generated by ent, DO NOT EDIT.

package system

import (
	"entgo.io/ent/dialect/sql"
	"github.com/carenaggio/hermes/ent/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.System {
	return predicate.System(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.System {
	return predicate.System(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.System {
	return predicate.System(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.System {
	return predicate.System(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.System {
	return predicate.System(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.System {
	return predicate.System(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.System {
	return predicate.System(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.System {
	return predicate.System(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.System {
	return predicate.System(sql.FieldLTE(FieldID, id))
}

// SystemID applies equality check predicate on the "system_id" field. It's identical to SystemIDEQ.
func SystemID(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldEQ(FieldSystemID, v))
}

// PublicKey applies equality check predicate on the "public_key" field. It's identical to PublicKeyEQ.
func PublicKey(v string) predicate.System {
	return predicate.System(sql.FieldEQ(FieldPublicKey, v))
}

// Approved applies equality check predicate on the "approved" field. It's identical to ApprovedEQ.
func Approved(v bool) predicate.System {
	return predicate.System(sql.FieldEQ(FieldApproved, v))
}

// LastLogin applies equality check predicate on the "last_login" field. It's identical to LastLoginEQ.
func LastLogin(v int64) predicate.System {
	return predicate.System(sql.FieldEQ(FieldLastLogin, v))
}

// SystemIDEQ applies the EQ predicate on the "system_id" field.
func SystemIDEQ(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldEQ(FieldSystemID, v))
}

// SystemIDNEQ applies the NEQ predicate on the "system_id" field.
func SystemIDNEQ(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldNEQ(FieldSystemID, v))
}

// SystemIDIn applies the In predicate on the "system_id" field.
func SystemIDIn(vs ...uuid.UUID) predicate.System {
	return predicate.System(sql.FieldIn(FieldSystemID, vs...))
}

// SystemIDNotIn applies the NotIn predicate on the "system_id" field.
func SystemIDNotIn(vs ...uuid.UUID) predicate.System {
	return predicate.System(sql.FieldNotIn(FieldSystemID, vs...))
}

// SystemIDGT applies the GT predicate on the "system_id" field.
func SystemIDGT(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldGT(FieldSystemID, v))
}

// SystemIDGTE applies the GTE predicate on the "system_id" field.
func SystemIDGTE(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldGTE(FieldSystemID, v))
}

// SystemIDLT applies the LT predicate on the "system_id" field.
func SystemIDLT(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldLT(FieldSystemID, v))
}

// SystemIDLTE applies the LTE predicate on the "system_id" field.
func SystemIDLTE(v uuid.UUID) predicate.System {
	return predicate.System(sql.FieldLTE(FieldSystemID, v))
}

// PublicKeyEQ applies the EQ predicate on the "public_key" field.
func PublicKeyEQ(v string) predicate.System {
	return predicate.System(sql.FieldEQ(FieldPublicKey, v))
}

// PublicKeyNEQ applies the NEQ predicate on the "public_key" field.
func PublicKeyNEQ(v string) predicate.System {
	return predicate.System(sql.FieldNEQ(FieldPublicKey, v))
}

// PublicKeyIn applies the In predicate on the "public_key" field.
func PublicKeyIn(vs ...string) predicate.System {
	return predicate.System(sql.FieldIn(FieldPublicKey, vs...))
}

// PublicKeyNotIn applies the NotIn predicate on the "public_key" field.
func PublicKeyNotIn(vs ...string) predicate.System {
	return predicate.System(sql.FieldNotIn(FieldPublicKey, vs...))
}

// PublicKeyGT applies the GT predicate on the "public_key" field.
func PublicKeyGT(v string) predicate.System {
	return predicate.System(sql.FieldGT(FieldPublicKey, v))
}

// PublicKeyGTE applies the GTE predicate on the "public_key" field.
func PublicKeyGTE(v string) predicate.System {
	return predicate.System(sql.FieldGTE(FieldPublicKey, v))
}

// PublicKeyLT applies the LT predicate on the "public_key" field.
func PublicKeyLT(v string) predicate.System {
	return predicate.System(sql.FieldLT(FieldPublicKey, v))
}

// PublicKeyLTE applies the LTE predicate on the "public_key" field.
func PublicKeyLTE(v string) predicate.System {
	return predicate.System(sql.FieldLTE(FieldPublicKey, v))
}

// PublicKeyContains applies the Contains predicate on the "public_key" field.
func PublicKeyContains(v string) predicate.System {
	return predicate.System(sql.FieldContains(FieldPublicKey, v))
}

// PublicKeyHasPrefix applies the HasPrefix predicate on the "public_key" field.
func PublicKeyHasPrefix(v string) predicate.System {
	return predicate.System(sql.FieldHasPrefix(FieldPublicKey, v))
}

// PublicKeyHasSuffix applies the HasSuffix predicate on the "public_key" field.
func PublicKeyHasSuffix(v string) predicate.System {
	return predicate.System(sql.FieldHasSuffix(FieldPublicKey, v))
}

// PublicKeyEqualFold applies the EqualFold predicate on the "public_key" field.
func PublicKeyEqualFold(v string) predicate.System {
	return predicate.System(sql.FieldEqualFold(FieldPublicKey, v))
}

// PublicKeyContainsFold applies the ContainsFold predicate on the "public_key" field.
func PublicKeyContainsFold(v string) predicate.System {
	return predicate.System(sql.FieldContainsFold(FieldPublicKey, v))
}

// ApprovedEQ applies the EQ predicate on the "approved" field.
func ApprovedEQ(v bool) predicate.System {
	return predicate.System(sql.FieldEQ(FieldApproved, v))
}

// ApprovedNEQ applies the NEQ predicate on the "approved" field.
func ApprovedNEQ(v bool) predicate.System {
	return predicate.System(sql.FieldNEQ(FieldApproved, v))
}

// LastLoginEQ applies the EQ predicate on the "last_login" field.
func LastLoginEQ(v int64) predicate.System {
	return predicate.System(sql.FieldEQ(FieldLastLogin, v))
}

// LastLoginNEQ applies the NEQ predicate on the "last_login" field.
func LastLoginNEQ(v int64) predicate.System {
	return predicate.System(sql.FieldNEQ(FieldLastLogin, v))
}

// LastLoginIn applies the In predicate on the "last_login" field.
func LastLoginIn(vs ...int64) predicate.System {
	return predicate.System(sql.FieldIn(FieldLastLogin, vs...))
}

// LastLoginNotIn applies the NotIn predicate on the "last_login" field.
func LastLoginNotIn(vs ...int64) predicate.System {
	return predicate.System(sql.FieldNotIn(FieldLastLogin, vs...))
}

// LastLoginGT applies the GT predicate on the "last_login" field.
func LastLoginGT(v int64) predicate.System {
	return predicate.System(sql.FieldGT(FieldLastLogin, v))
}

// LastLoginGTE applies the GTE predicate on the "last_login" field.
func LastLoginGTE(v int64) predicate.System {
	return predicate.System(sql.FieldGTE(FieldLastLogin, v))
}

// LastLoginLT applies the LT predicate on the "last_login" field.
func LastLoginLT(v int64) predicate.System {
	return predicate.System(sql.FieldLT(FieldLastLogin, v))
}

// LastLoginLTE applies the LTE predicate on the "last_login" field.
func LastLoginLTE(v int64) predicate.System {
	return predicate.System(sql.FieldLTE(FieldLastLogin, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.System) predicate.System {
	return predicate.System(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.System) predicate.System {
	return predicate.System(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.System) predicate.System {
	return predicate.System(sql.NotPredicates(p))
}
